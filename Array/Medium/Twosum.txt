import java.util.Arrays;

class Solution {
    public int[] twoSum(int[] nums, int target) {
        // Pair the values with their original indices
        int[][] numWithIndex = new int[nums.length][2];
        for (int i = 0; i < nums.length; i++) {
            numWithIndex[i][0] = nums[i]; // Value
            numWithIndex[i][1] = i;      // Original Index
        }

        // Sort the array of pairs by value
        Arrays.sort(numWithIndex, (a, b) -> Integer.compare(a[0], b[0]));

        // Two-pointer logic
        int start = 0;
        int end = nums.length - 1;
        while (start < end) {
            int sum = numWithIndex[start][0] + numWithIndex[end][0];
            if (sum == target) {
                // Return the original indices
                return new int[]{numWithIndex[start][1], numWithIndex[end][1]};
            } else if (sum > target) {
                end--;
            } else {
                start++;
            }
        }

        // Return -1, -1 if no solution is found
        return new int[]{-1, -1};
    }
}
https://wbd.ms/share/v2/aHR0cHM6Ly93aGl0ZWJvYXJkLm1pY3Jvc29mdC5jb20vYXBpL3YxLjAvd2hpdGVib2FyZHMvcmVkZWVtLzQ0NTA1ODIzZGZjYzQ4YmM5NWVlOWJhMDQ5N2MzMDIwX0JCQTcxNzYyLTEyRTAtNDJFMS1CMzI0LTVCMTMxRjQyNEUzRF8xYWQ3ZGNjZS0yZjkzLTQ1NTctYTg4Yy1jMjIwZjM5NDkxNzA=